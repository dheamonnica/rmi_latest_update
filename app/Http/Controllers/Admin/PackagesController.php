<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-02-26 06:12:13              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Admin; use App\Models\Package; use Illuminate\Http\Request; use App\Services\PackageInstaller; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Artisan; use App\Http\Requests\AdminOnlyAccessRequest; use App\Http\Requests\Validations\PackageInstallationRequest; class PackagesController extends Controller { public function index(AdminOnlyAccessRequest $request) { $installables = $this->scanPackages(); $installs = Package::all(); return view("\141\x64\155\x69\156\x2e\x70\x61\x63\x6b\141\x67\145\163\56\151\156\x64\x65\170", compact("\151\x6e\x73\164\141\x6c\154\x61\x62\154\145\163", "\x69\156\x73\164\141\154\x6c\163")); } public function upload(AdminOnlyAccessRequest $request) { return view("\141\x64\x6d\x69\156\x2e\x70\x61\x63\153\141\147\145\163\x2e\137\x75\x70\x6c\157\141\144"); } public function save(AdminOnlyAccessRequest $request) { echo "\x3c\x70\162\145\x3e"; print_r($request->all()); echo "\x3c\x70\x72\145\76"; exit("\145\156\144\x21"); } public function initiate(AdminOnlyAccessRequest $request, $package) { if (!(config("\x61\x70\160\56\144\145\x6d\157") == true && config("\141\x70\x70\x2e\x64\x65\x62\x75\x67") !== true)) { goto DK_4c; } return back()->with("\167\141\x72\x6e\x69\x6e\x67", trans("\155\x65\163\x73\141\x67\x65\x73\x2e\144\145\x6d\x6f\137\162\x65\x73\x74\162\x69\x63\x74\151\x6f\x6e")); DK_4c: $installable = $this->scanPackages($package); if (!($installable && Package::where("\x73\154\x75\x67", $installable["\163\x6c\165\147"])->first())) { goto DkjuE; } return back()->with("\145\162\162\157\162", trans("\x6d\x65\163\x73\x61\x67\x65\163\x2e\x70\141\143\x6b\141\x67\x65\x5f\x69\156\163\164\x61\154\x6c\145\x64\x5f\141\x6c\x72\x65\141\144\171", ["\160\x61\x63\153\x61\x67\x65" => $package])); DkjuE: return view("\x61\x64\x6d\151\156\56\x70\141\x63\153\141\x67\x65\x73\56\137\x69\x6e\x69\164\151\x61\164\x65", compact("\151\156\x73\164\x61\154\x6c\141\142\154\x65")); } public function upgrade(AdminOnlyAccessRequest $request, $package) { if (!(config("\141\x70\x70\56\144\x65\x6d\x6f") == true && config("\141\160\x70\56\x64\145\142\165\147") !== true)) { goto uKI2q; } return back()->with("\167\141\162\156\151\156\147", trans("\155\145\x73\x73\141\x67\145\163\56\x64\145\x6d\157\x5f\162\x65\163\x74\x72\x69\143\x74\151\x6f\x6e")); uKI2q: $installable = $this->scanPackages($package); if ($installable) { goto p9O0K; } return back()->with("\145\x72\x72\157\162", trans("\x6d\x65\x73\x73\x61\x67\145\x73\x2e\x70\141\x63\x6b\141\147\145\x5f\156\157\164\137\x66\x6f\165\x6e\x64", ["\160\x61\143\x6b\141\147\145" => $package])); p9O0K: try { $installer = new PackageInstaller($request, $installable); $installer->migrate(); } catch (\Exception $e) { Log::error($e); return back()->with("\x65\162\162\x6f\162", $e->getMessage()); } return back()->with("\163\x75\x63\x63\145\163\x73", trans("\155\145\x73\x73\141\x67\145\163\x2e\x70\141\143\x6b\141\x67\x65\137\x75\x70\x67\x72\141\x64\145\144\137\163\165\143\143\x65\x73\x73", ["\160\x61\143\x6b\141\147\145" => $package])); } public function install(PackageInstallationRequest $request, $package) { if (!(config("\x61\160\x70\x2e\x64\x65\155\x6f") == true && config("\141\x70\160\x2e\144\x65\142\x75\x67") !== true)) { goto idLZw; } return back()->with("\167\x61\162\x6e\x69\x6e\x67", trans("\155\145\163\163\x61\147\145\x73\56\x64\145\155\x6f\x5f\162\145\163\164\162\151\x63\x74\151\x6f\x6e")); idLZw: $installable = $this->scanPackages($package); if ($installable) { goto n5Uap; } return back()->with("\145\162\x72\157\162", trans("\155\x65\163\x73\x61\x67\145\x73\56\x70\141\x63\153\x61\147\x65\x5f\x6e\157\164\137\146\x6f\x75\156\144", ["\160\141\x63\153\x61\x67\x65" => $package])); n5Uap: try { $installer = new PackageInstaller($request, $installable); $installer->install(); } catch (\Exception $e) { Log::error($e); $installer->uninstall(); $registered = Package::where("\x73\x6c\x75\147", $package)->first(); if (!$registered) { goto rKGDN; } $registered->delete(); rKGDN: return back()->with("\145\x72\162\157\x72", $e->getMessage()); } Artisan::call("\143\x61\143\x68\145\72\x63\154\145\x61\162"); Artisan::call("\162\157\x75\164\145\72\143\154\x65\x61\162"); return back()->with("\163\165\x63\143\x65\x73\x73", trans("\x6d\145\163\163\x61\x67\x65\x73\56\x70\x61\143\153\x61\147\145\x5f\x69\156\163\164\x61\x6c\154\145\x64\x5f\x73\x75\143\x63\x65\x73\x73", ["\x70\141\x63\153\141\147\x65" => $package])); } public function uninstall(AdminOnlyAccessRequest $request, $package) { if (!(config("\141\x70\x70\x2e\x64\x65\x6d\157") == true && config("\141\160\160\x2e\x64\145\x62\x75\147") !== true)) { goto R5rR3; } return back()->with("\x77\141\162\156\151\156\x67", trans("\x6d\145\163\163\141\x67\145\163\x2e\x64\x65\155\157\x5f\x72\145\163\164\162\151\x63\x74\151\157\156")); R5rR3: $registered = Package::where("\163\x6c\x75\147", $package)->firstOrFail(); $uninstallable = $this->scanPackages($package); try { $installer = new PackageInstaller($request, $uninstallable); if (!$installer->uninstall()) { goto oMi69; } Artisan::call("\x63\x61\x63\150\145\x3a\x63\154\x65\141\162"); Artisan::call("\x72\157\x75\x74\x65\72\143\154\145\141\162"); if (!$registered->delete()) { goto S3kFH; } return back()->with("\x73\x75\143\x63\145\163\163", trans("\x6d\145\163\163\x61\147\145\163\x2e\160\x61\143\153\141\x67\145\x5f\165\x6e\x69\x6e\163\164\141\154\154\145\x64\137\163\165\x63\x63\145\163\163", ["\160\x61\x63\x6b\x61\147\x65" => $package])); S3kFH: oMi69: } catch (\Exception $e) { Log::error($e); return back()->with("\x65\x72\162\157\x72", $e->getMessage()); } return back()->with("\x65\162\162\157\x72", trans("\x6d\145\x73\163\141\x67\145\163\56\146\x61\151\154\145\144")); } public function activation(AdminOnlyAccessRequest $request, $slug) { if (!(config("\x61\160\x70\56\144\x65\155\x6f") == true && config("\x61\x70\160\x2e\x64\x65\142\165\x67") !== true)) { goto Ja01x; } return response("\145\162\x72\157\x72", 444); Ja01x: if (!($registered = Package::where("\x73\x6c\165\x67", $slug)->first())) { goto gdYyn; } $registered->active = !$registered->active; $registered->save(); Artisan::call("\x63\141\x63\x68\145\72\143\154\145\x61\x72"); return response("\x73\x75\143\143\x65\x73\163", 200); gdYyn: if (!($unregistered = $this->scanPackages($slug))) { goto i9PeM; } $registered = Package::create($unregistered); i9PeM: return response("\163\x75\143\x63\145\163\163", 200); } public function updateConfig(Request $request) { if (!updateOptionTable($request)) { goto rGV6J; } Artisan::call("\143\x61\143\150\x65\72\143\154\145\x61\162"); return back()->with("\163\x75\x63\x63\x65\x73\163", trans("\x6d\x65\x73\x73\141\147\145\163\56\x70\x61\x63\x6b\x61\147\x65\137\163\145\x74\164\151\156\147\x73\x5f\x75\160\x64\x61\164\x65\144")); rGV6J: return back()->with("\145\x72\162\157\x72", trans("\155\x65\x73\163\x61\147\x65\x73\x2e\x66\x61\151\154\145\x64")); } public function toggleConfig(Request $request, $option) { if (!(config("\141\160\x70\56\x64\x65\x6d\157") == true && config("\x61\160\160\x2e\x64\145\x62\165\x67") !== true)) { goto dtd86; } return response("\145\x72\162\157\162", 444); dtd86: $updated = DB::table("\157\x70\164\x69\157\156\x73")->where("\157\x70\164\x69\x6f\156\x5f\x6e\141\155\x65", $option)->update(["\157\x70\164\151\157\156\x5f\x76\x61\154\x75\145" => DB::raw("\x4e\x4f\124\x20\x6f\160\x74\x69\157\x6e\x5f\x76\x61\154\x75\145")]); if (!$updated) { goto QHtKd; } Artisan::call("\143\x61\143\150\x65\x3a\x63\154\145\x61\162"); return response("\163\165\x63\x63\145\163\163", 200); QHtKd: return response("\x65\162\x72\x6f\x72", 405); } private function scanPackages($slug = null) { $packages = []; foreach (glob(base_path("\160\x61\x63\x6b\x61\x67\x65\163\57\x2a"), GLOB_ONLYDIR) as $dir) { if (!file_exists($manifest = $dir . "\57\x6d\141\x6e\151\146\x65\163\x74\x2e\152\163\x6f\x6e")) { goto d2xQR; } $json = file_get_contents($manifest); if (!($json !== '')) { goto SsIP_; } $data = json_decode($json, true); if (!($data === null)) { goto AgX_B; } throw new \Exception("\111\156\166\141\154\151\144\x20\155\x61\156\x69\146\x65\x73\164\56\x6a\163\x6f\x6e\x20\x66\x69\154\145\x20\141\164\40\133{$dir}\x5d"); AgX_B: $data["\160\141\164\x68"] = $dir; if (!($slug && $data["\163\x6c\165\147"] == $slug)) { goto DmIK6; } return $data; DmIK6: $packages[] = $data; SsIP_: d2xQR: Fc2hG: } pSHfb: usort($packages, function ($x, $y) { return strcasecmp($x["\x6e\141\155\x65"], $y["\156\141\155\x65"]); }); return $packages; } }